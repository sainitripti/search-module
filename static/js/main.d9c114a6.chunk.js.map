{"version":3,"sources":["logo.svg","Header.js","SearchForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","bg","variant","Brand","alt","src","logo","width","height","className","Component","SearchForm","props","validateName","nameError","state","name","test","validatePhoneNumber","searchByInputError","searchByInput","match","length","validateEmail","toLowerCase","resetError","setState","resetFormFields","resetForm","validate","searchOption","handleSubmit","e","preventDefault","console","log","data","axios","post","then","response","submitSuccessMsg","catch","error","alert","handleChange","event","target","value","Form","onSubmit","this","Group","as","Row","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","Check","label","id","checked","span","offset","Button","onClick","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,sOC2B5BC,E,uKAnBP,OACI,gCACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACtB,kBAACF,EAAA,EAAOG,MAAR,KACA,yBACIC,IAAI,GACJC,IAAKC,IACLC,MAAM,KACNC,OAAO,KACPC,UAAU,8BAGd,kBAACT,EAAA,EAAOG,MAAR,CAAcM,UAAU,mBAAxB,qB,GAfCC,a,yDCiNNC,E,kDAhNX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,aAAe,WACX,IAAIC,EAAY,GAahB,OATI,EAAKC,MAAMC,KAFG,eAMCC,KAAK,EAAKF,MAAMC,QAE/BF,EAAY,mCAJZA,EAAY,oBAOTA,GA3BQ,EA8BnBI,oBAAsB,WAClB,IAAIC,EAAqB,GAUzB,OARI,EAAKJ,MAAMK,cAIwC,KAA/C,EAAKL,MAAMK,cAAcC,MAAM,OAAOC,SAE1CH,EAAqB,mCAJrBA,EAAqB,4BAMlBA,GAzCQ,EA4CnBI,cAAgB,WACZ,IAAIJ,EAAqB,GAazB,OARI,EAAKJ,MAAMK,cAFI,0JAMCH,KAAK,EAAKF,MAAMK,cAAcI,iBAE9CL,EAAqB,uCAJrBA,EAAqB,6BAMlBA,GA1DQ,EA6DnBM,WAAa,WACT,EAAKC,SAAS,CAAEZ,UAAW,GAAIK,mBAAoB,MA9DpC,EAiEnBQ,gBAAkB,WACd,EAAKD,SAAS,CACV,KAAQ,GACR,cAAiB,GACjB,aAAgB,iBArEL,EAyEnBE,UAAY,WACR,EAAKF,SAAS,CACV,KAAQ,GACR,cAAiB,GACjB,aAAgB,cAChB,UAAa,GACb,mBAAuB,GACvB,iBAAqB,MAhFV,EAoFnBG,SAAW,WACP,EAAKJ,aAEL,IAAIX,EAAY,EAAKD,eACjBM,EAAkD,gBAA5B,EAAKJ,MAAMe,aAAiC,EAAKZ,sBAAwB,EAAKK,gBAExG,OAAGT,IAAWK,IAEV,EAAKO,SAAS,CAACZ,YAAWK,wBACnB,IA7FI,EAkGnBY,aAAe,SAACC,GAGZ,GAFAA,EAAEC,iBACc,EAAKJ,WACT,CACRK,QAAQC,IAAI,EAAKpB,OACjB,IAAIqB,EAAO,CACP,KAAQ,EAAKrB,MAAMC,KACnB,cAAiB,EAAKD,MAAMK,cAC5B,aAAgB,EAAKL,MAAMe,cAE/BO,IAAMC,KAAK,8BAA+BF,GACzCG,MAAK,SAAAC,GACFN,QAAQC,IAAIK,GAEZ,EAAKd,SAAS,CAACe,iBADQ,iCAEvB,EAAKd,qBAERe,OAAM,SAAAC,GACHT,QAAQC,IAAIQ,GACZC,MAAM,oDArHC,EA0HnBC,aAAe,SAAAC,GACX,EAAKpB,SAAL,eAAgBoB,EAAMC,OAAO/B,KAAO8B,EAAMC,OAAOC,SAxHjD,EAAKjC,MAAQ,CACTC,KAAM,GACNI,cAAe,GACfU,aAAc,cACdhB,UAAU,GACVK,mBAAoB,GACpBsB,iBAAmB,IATR,E,qDA+Hf,OACI,6BAAShC,UAAU,eACf,kBAACwC,EAAA,EAAD,CAAMC,SAAUC,KAAKpB,cACjB,kBAACkB,EAAA,EAAKG,MAAN,CAAYC,GAAIC,IAAKC,UAAU,QAC3B,kBAACN,EAAA,EAAKO,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,QAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACT,kBAACT,EAAA,EAAKW,QAAN,CACIC,KAAK,OACL7C,KAAK,OACL8C,YAAY,qBACZd,MAAOG,KAAKpC,MAAMC,KAClB+C,SAAUZ,KAAKN,eAEnB,0BAAMpC,UAAU,eAAe0C,KAAKpC,MAAMD,aAI9C,kCACI,kBAACmC,EAAA,EAAKG,MAAN,CAAYC,GAAIC,KAChB,kBAACL,EAAA,EAAKO,MAAN,CAAYH,GAAG,SAASI,QAAM,EAACC,GAAI,GAAnC,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAACT,EAAA,EAAKe,MAAN,CACAH,KAAK,QACLI,MAAM,eACNjD,KAAK,eACLkD,GAAG,+BACHlB,MAAM,cACNmB,QAAqC,gBAA5BhB,KAAKpC,MAAMe,aACpBiC,SAAUZ,KAAKN,eAEf,kBAACI,EAAA,EAAKe,MAAN,CACAH,KAAK,QACLI,MAAM,gBACNjD,KAAK,eACLkD,GAAG,yBACHlB,MAAM,QACNmB,QAAqC,UAA5BhB,KAAKpC,MAAMe,aACpBiC,SAAUZ,KAAKN,kBAMvB,kBAACI,EAAA,EAAKG,MAAN,CAAYC,GAAIC,IAAKC,UAAU,qBAC3B,kBAACN,EAAA,EAAKO,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,yBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACT,kBAACT,EAAA,EAAKW,QAAN,CACIC,KAAK,OACL7C,KAAK,gBACL8C,YAA2C,gBAA5BX,KAAKpC,MAAMe,aAAiC,aAAa,iBACxEkB,MAAOG,KAAKpC,MAAMK,cAClB2C,SAAUZ,KAAKN,eAEnB,0BAAMpC,UAAU,eAAe0C,KAAKpC,MAAMI,sBAG9C,kBAAC8B,EAAA,EAAKG,MAAN,CAAYC,GAAIC,KACZ,kBAACK,EAAA,EAAD,CAAKD,GAAI,CAAEU,KAAM,EAAGC,OAAQ,IAC5B,kBAACC,EAAA,EAAD,CAAQT,KAAK,UAAb,WAEA,kBAACF,EAAA,EAAD,CAAKD,GAAI,GACT,kBAACY,EAAA,EAAD,CAAQC,QAASpB,KAAKvB,WAAtB,WAGJ,kBAAC0B,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAAKD,GAAI,CAAEU,KAAM,GAAIC,OAAQ,IACzB,0BAAM5D,UAAU,gBAAgB0C,KAAKpC,MAAM0B,0B,GAzM9C/B,aCWV8D,MATf,WACE,OACE,yBAAK/D,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2DCZNwD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7C,MAAK,SAAA8C,GACJA,EAAaC,gBAEd5C,OAAM,SAAAC,GACLT,QAAQS,MAAMA,EAAM4C,c","file":"static/js/main.d9c114a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { Navbar} from 'react-bootstrap';\r\n\r\nimport logo from './logo.svg';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand>\r\n                    <img\r\n                        alt=\"\"\r\n                        src={logo}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Brand className=\"mx-auto heading\">Sample Form</Navbar.Brand>\r\n                </Navbar>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Form, Col, Row, Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass SearchForm extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            name: \"\",\r\n            searchByInput: \"\",\r\n            searchOption: \"phoneNumber\",\r\n            nameError:\"\",\r\n            searchByInputError: \"\",\r\n            submitSuccessMsg : \"\"\r\n        };\r\n    }\r\n\r\n    validateName = () => {\r\n        let nameError = \"\";\r\n\r\n        const regexName = /^[a-zA-Z ]*$/;\r\n\r\n        if(!this.state.name)\r\n        {\r\n            nameError = \"Name is required!\";\r\n        }    \r\n        else if(!regexName.test(this.state.name))\r\n        {\r\n            nameError = \"Please enter a valid full name!\";\r\n        }\r\n\r\n        return nameError;\r\n    };\r\n\r\n    validatePhoneNumber = () => {\r\n        let searchByInputError = \"\";\r\n\r\n        if(!this.state.searchByInput)\r\n        {\r\n            searchByInputError = \"Phone number is required!\";\r\n        }\r\n        else if(this.state.searchByInput.match(/\\d/g).length!==10)\r\n        {\r\n            searchByInputError = \"Phone number must of 10 digits!\";\r\n        }\r\n        return searchByInputError;\r\n    }\r\n\r\n    validateEmail = () => {\r\n        let searchByInputError = \"\";\r\n\r\n        // Regex for invalid emails\r\n        const regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        \r\n        if(!this.state.searchByInput)\r\n        {\r\n            searchByInputError = \"Email address is required!\";\r\n        }\r\n        else if(!regexEmail.test(this.state.searchByInput.toLowerCase()))\r\n        {\r\n            searchByInputError = \"Please enter a valid email address!\";\r\n        }\r\n        return searchByInputError;\r\n    }\r\n\r\n    resetError = () => {\r\n        this.setState({ nameError: \"\", searchByInputError: \"\"});\r\n    }\r\n\r\n    resetFormFields = () => {\r\n        this.setState({\r\n            'name': \"\",\r\n            'searchByInput': \"\",\r\n            'searchOption': \"phoneNumber\"\r\n        });\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            'name': \"\",\r\n            'searchByInput': \"\",\r\n            'searchOption': \"phoneNumber\",\r\n            'nameError' :\"\",\r\n            'searchByInputError' : \"\",\r\n            'submitSuccessMsg' : \"\"\r\n        });\r\n    }\r\n\r\n    validate = () => {\r\n        this.resetError();\r\n\r\n        let nameError = this.validateName();\r\n        let searchByInputError = (this.state.searchOption === \"phoneNumber\" ? this.validatePhoneNumber() : this.validateEmail());\r\n        \r\n        if(nameError||searchByInputError)\r\n        {\r\n            this.setState({nameError, searchByInputError});\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if(isValid) {\r\n            console.log(this.state);\r\n            let data = {\r\n                \"name\": this.state.name,\r\n                \"searchByInput\": this.state.searchByInput,\r\n                \"searchOption\": this.state.searchOption\r\n            };\r\n            axios.post('https://reqres.in/api/users', data)\r\n            .then(response => {\r\n                console.log(response);    \r\n                let submitSuccessMsg = \"Form submitted successfully!\";\r\n                this.setState({submitSuccessMsg});\r\n                this.resetFormFields();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                alert(\"Oops! Could not submit form data: 505 error\");\r\n            });         \r\n        }  \r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"margin-5-10\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group as={Row} controlId=\"name\">\r\n                        <Form.Label column sm={2}>\r\n                        Name\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <Form.Control   \r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Firstname Lastname\"\r\n                            value={this.state.name} \r\n                            onChange={this.handleChange} \r\n                            />\r\n                        <span className=\"text-danger\">{this.state.nameError}</span>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <fieldset>\r\n                        <Form.Group as={Row}>\r\n                        <Form.Label as=\"legend\" column sm={2}>\r\n                            Search By\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Phone Number\"\r\n                            name=\"searchOption\"\r\n                            id=\"formSearchByPhoneNumberRadio\"\r\n                            value=\"phoneNumber\"\r\n                            checked={this.state.searchOption === \"phoneNumber\"}\r\n                            onChange={this.handleChange}\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Email Address\"\r\n                            name=\"searchOption\"\r\n                            id=\"formSearchByEmailRadio\"\r\n                            value=\"email\"\r\n                            checked={this.state.searchOption === \"email\"}\r\n                            onChange={this.handleChange}\r\n                            />\r\n                        </Col>\r\n                        </Form.Group>\r\n                    </fieldset>\r\n\r\n                    <Form.Group as={Row} controlId=\"formSearchByInput\">\r\n                        <Form.Label column sm={2}>\r\n                        Enter Search By Input\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <Form.Control \r\n                            type=\"text\"\r\n                            name=\"searchByInput\"\r\n                            placeholder = {this.state.searchOption === \"phoneNumber\" ? \"9876543210\":\"name@gmail.com\"}\r\n                            value={this.state.searchByInput}\r\n                            onChange={this.handleChange} \r\n                            />\r\n                        <span className=\"text-danger\">{this.state.searchByInputError}</span>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 2, offset: 2 }}>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                        </Col>\r\n                        <Col sm={2}>\r\n                        <Button onClick={this.resetForm}>Reset</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Row>\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <span className=\"text-success\">{this.state.submitSuccessMsg}</span>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Header from './Header';\nimport SearchForm from './SearchForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <SearchForm></SearchForm>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}